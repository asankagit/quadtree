{"version":3,"file":"main.umd.js","mappings":"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","sources":["webpack://@asanka-npm/chameleon/webpack/universalModuleDefinition","webpack://@asanka-npm/chameleon/./src/lib/shaderBinder.js","webpack://@asanka-npm/chameleon/./src/lib/webgl-utils.js","webpack://@asanka-npm/chameleon/webpack/bootstrap","webpack://@asanka-npm/chameleon/webpack/runtime/define property getters","webpack://@asanka-npm/chameleon/webpack/runtime/hasOwnProperty shorthand","webpack://@asanka-npm/chameleon/webpack/runtime/make namespace object","webpack://@asanka-npm/chameleon/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@asanka-npm/chameleon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@asanka-npm/chameleon\"] = factory();\n\telse\n\t\troot[\"@asanka-npm/chameleon\"] = factory();\n})(this, () => {\nreturn ","const webglUtils  = require(\"./webgl-utils\")\n\n\n\n// REFERENCE: https://webglfundamentals.org/webgl/lessons/webgl-3d-textures.html\nfunction render(image, canvasEle, shaderCode=null) {\n    /** @type {HTMLCanvasElement} */\n    var canvas = canvasEle;//document.getElementById(\"glCanvas\");\n    var gl = canvas.getContext(\"webgl\");\n    if (!gl) {\n        return;\n    }\n\n    const vertexShader = shaderCode?.vertex ? shaderCode.vertex : `attribute vec2 a_position;\n    attribute vec2 a_texCoord;\n    \n    uniform vec2 u_resolution;\n    \n    varying vec2 v_texCoord;\n    \n    void main() {\n       // convert the rectangle from pixels to 0.0 to 1.0\n       vec2 zeroToOne = a_position / u_resolution;\n    \n       // convert from 0->1 to 0->2\n       vec2 zeroToTwo = zeroToOne * 2.0;\n    \n       // convert from 0->2 to -1->+1 (clipspace)\n       vec2 clipSpace = zeroToTwo - 1.0;\n    \n       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n    \n       // pass the texCoord to the fragment shader\n       // The GPU will interpolate this value between points.\n       v_texCoord = a_texCoord;\n    }`;\n\n    const fragmentShader = shaderCode?.fragment ? shaderCode.fragment : `precision mediump float;\n\n    // our texture\n    uniform sampler2D u_image;\n    uniform vec2 iResolution;\n    // the texCoords passed in from the vertex shader.\n    varying vec2 v_texCoord;\n    \n    void main() {\n        vec2 uv = gl_FragCoord.xy / iResolution;\n    \n        // get pixel information from uv location\n        vec4 texColor = texture2D(u_image, v_texCoord).bgra;\n    \n        float intensity = fract(texColor.x * texColor.y * 2.5);\n    \n        //gl_FragColor = texture2D(u_image, v_texCoord).bgra;\n        vec4 color;\n        if (intensity > 0.8)\n            color = vec4(texColor.rgb, 1.0);\n        else if (intensity > 0.5)\n            color = vec4(texColor.rgb, .9);\n        else if (intensity > 0.25)\n            color = vec4(texColor.rgb, .4);\n        else\n            color = vec4(texColor.rgb, .5);\n        \n        float grayScale = (texColor.r + texColor.g + texColor.b) / 3.0;\n        gl_FragColor = vec4(grayScale, texColor.gb * 1.8, 1.0);\n    \n       \n    }`;\n\n    // setup GLSL program\n    var program = webglUtils.createProgramFromScripts(gl,\n        vertexShader, fragmentShader\n        \n    );\n\n    // look up where the vertex data needs to go.\n    var positionLocation = gl.getAttribLocation(program, \"a_position\");\n    var texcoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n\n    // Create a buffer to put three 2d clip space points in\n    var positionBuffer = gl.createBuffer();\n\n    // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    // Set a rectangle the same size as the image.\n    setRectangle(gl, 0, 0, image.width, image.height);\n\n    // provide texture coordinates for the rectangle.\n    var texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n        0.0, 0.0,\n        1.0, 0.0,\n        0.0, 1.0,\n        0.0, 1.0,\n        1.0, 0.0,\n        1.0, 1.0,\n    ]), gl.STATIC_DRAW);\n\n    // Create a texture.\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\n    // lookup uniforms\n    var resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n\n    webglUtils.resizeCanvasToDisplaySize(gl.canvas);\n\n    // Tell WebGL how to convert from clip space to pixels\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    // Clear the canvas\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(program);\n\n    // Turn on the position attribute\n    gl.enableVertexAttribArray(positionLocation);\n\n    // Bind the position buffer.\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    // Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n    var size = 2;          // 2 components per iteration\n    var type = gl.FLOAT;   // the data is 32bit floats\n    var normalize = false; // don't normalize the data\n    var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\n    var offset = 0;        // start at the beginning of the buffer\n    gl.vertexAttribPointer(\n        positionLocation, size, type, normalize, stride, offset);\n\n    // Turn on the texcoord attribute\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    // bind the texcoord buffer.\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n\n    // Tell the texcoord attribute how to get data out of texcoordBuffer (ARRAY_BUFFER)\n    var size = 2;          // 2 components per iteration\n    var type = gl.FLOAT;   // the data is 32bit floats\n    var normalize = false; // don't normalize the data\n    var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\n    var offset = 0;        // start at the beginning of the buffer\n    gl.vertexAttribPointer(\n        texcoordLocation, size, type, normalize, stride, offset);\n\n    // set the resolution\n    gl.uniform2f(resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Draw the rectangle.\n    var primitiveType = gl.TRIANGLES;\n    var offset = 0;\n    var count = 6;\n    gl.drawArrays(primitiveType, offset, count);\n}\n\nfunction setRectangle(gl, x, y ,width, height) {\n    var x1 = x;\n    var x2 = x + width;\n    var y1 = y;\n    var y2 = y + height;\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n        x1, y1,\n        x2, y1,\n        x1, y2,\n        x1, y2,\n        x2, y1,\n        x2, y2,\n    ]), gl.STATIC_DRAW);\n}\n\n\nexport const paint = (fileName, canvas, shaderCode=null) => {\n    const image = new Image();\n    image.src = fileName;\n    image.onload = function () {\n        render(image, canvas, shaderCode);\n    };\n}\n\n\n","/*\n * Copyright 2021 GFXFundamentals.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of GFXFundamentals. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function(root, factory) {  // eslint-disable-line\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define([], function() {\n        return factory.call(root);\n      });\n    } else {\n      // Browser globals\n      root.webglUtils = factory.call(root);\n    }\n  }(this, function() {\n    'use strict';\n  \n    const topWindow = this;\n  \n    /** @module webgl-utils */\n  \n    function isInIFrame(w) {\n      w = w || topWindow;\n      return w !== w.top;\n    }\n  \n    if (!isInIFrame()) {\n      console.log(\"%c%s\", 'color:blue;font-weight:bold;', 'for more about webgl-utils.js see:');  // eslint-disable-line\n      console.log(\"%c%s\", 'color:blue;font-weight:bold;', 'https://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html');  // eslint-disable-line\n    }\n  \n    /**\n     * Wrapped logging function.\n     * @param {string} msg The message to log.\n     */\n    function error(msg) {\n      if (topWindow.console) {\n        if (topWindow.console.error) {\n          topWindow.console.error(msg);\n        } else if (topWindow.console.log) {\n          topWindow.console.log(msg);\n        }\n      }\n    }\n  \n  \n    /**\n     * Error Callback\n     * @callback ErrorCallback\n     * @param {string} msg error message.\n     * @memberOf module:webgl-utils\n     */\n  \n  \n    /**\n     * Loads a shader.\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n     * @param {string} shaderSource The shader source.\n     * @param {number} shaderType The type of shader.\n     * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\n     * @return {WebGLShader} The created shader.\n     */\n    function loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n      const errFn = opt_errorCallback || error;\n      // Create the shader object\n      const shader = gl.createShader(shaderType);\n  \n      // Load the shader source\n      gl.shaderSource(shader, shaderSource);\n  \n      // Compile the shader\n      gl.compileShader(shader);\n  \n      // Check the compile status\n      const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n      if (!compiled) {\n        // Something went wrong during compilation; get the error\n        const lastError = gl.getShaderInfoLog(shader);\n        errFn('*** Error compiling shader \\'' + shader + '\\':' + lastError + `\\n` + shaderSource.split('\\n').map((l,i) => `${i + 1}: ${l}`).join('\\n'));\n        gl.deleteShader(shader);\n        return null;\n      }\n  \n      return shader;\n    }\n  \n    /**\n     * Creates a program, attaches shaders, binds attrib locations, links the\n     * program and calls useProgram.\n     * @param {WebGLShader[]} shaders The shaders to attach\n     * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n     * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n     * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n     *        on error. If you want something else pass an callback. It's passed an error message.\n     * @memberOf module:webgl-utils\n     */\n    function createProgram(\n        gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n      const errFn = opt_errorCallback || error;\n      const program = gl.createProgram();\n      shaders.forEach(function(shader) {\n        gl.attachShader(program, shader);\n      });\n      if (opt_attribs) {\n        opt_attribs.forEach(function(attrib, ndx) {\n          gl.bindAttribLocation(\n              program,\n              opt_locations ? opt_locations[ndx] : ndx,\n              attrib);\n        });\n      }\n      gl.linkProgram(program);\n  \n      // Check the link status\n      const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n      if (!linked) {\n          // something went wrong with the link\n          const lastError = gl.getProgramInfoLog(program);\n          errFn('Error in program linking:' + lastError);\n  \n          gl.deleteProgram(program);\n          return null;\n      }\n      return program;\n    }\n  \n    /**\n     * Loads a shader from a script tag.\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n     * @param {string} scriptId The id of the script tag.\n     * @param {number} opt_shaderType The type of shader. If not passed in it will\n     *     be derived from the type of the script tag.\n     * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\n     * @return {WebGLShader} The created shader.\n     */\n    function createShaderFromScript(\n        gl, scriptId, opt_shaderType, opt_errorCallback) {\n      let shaderSource = '';\n      let shaderType;\n      const shaderScript = document.getElementById(scriptId);\n      if (!shaderScript) {\n        throw ('*** Error: unknown script element' + scriptId);\n      }\n      shaderSource = shaderScript.text;\n  \n      if (!opt_shaderType) {\n        if (shaderScript.type === 'x-shader/x-vertex') {\n          shaderType = gl.VERTEX_SHADER;\n        } else if (shaderScript.type === 'x-shader/x-fragment') {\n          shaderType = gl.FRAGMENT_SHADER;\n        } else if (shaderType !== gl.VERTEX_SHADER && shaderType !== gl.FRAGMENT_SHADER) {\n          throw ('*** Error: unknown shader type');\n        }\n      }\n  \n      return loadShader(\n          gl, shaderSource, opt_shaderType ? opt_shaderType : shaderType,\n          opt_errorCallback);\n    }\n  \n    const defaultShaderType = [\n      'VERTEX_SHADER',\n      'FRAGMENT_SHADER',\n    ];\n  \n    /**\n     * Creates a program from 2 script tags.\n     *\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n     *        to use.\n     * @param {string[]} shaderScriptIds Array of ids of the script\n     *        tags for the shaders. The first is assumed to be the\n     *        vertex shader, the second the fragment shader.\n     * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n     * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n     * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n     *        on error. If you want something else pass an callback. It's passed an error message.\n     * @return {WebGLProgram} The created program.\n     * @memberOf module:webgl-utils\n     */\n    function createProgramFromScripts_original(\n        gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n      const shaders = [];\n      for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n        shaders.push(createShaderFromScript(\n            gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], opt_errorCallback));\n      }\n      return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\n    }\n  \n    function createProgramFromScripts(gl, vertexShaderSource, fragmentShaderSource) {\n        // Create vertex shader\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        if (!vertexShader) {\n            console.error('Failed to create vertex shader');\n            return null;\n        }\n        gl.shaderSource(vertexShader, vertexShaderSource);\n        gl.compileShader(vertexShader);\n        // Check for compilation errors...\n    \n        // Create fragment shader\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        if (!fragmentShader) {\n            console.error('Failed to create fragment shader');\n            return null;\n        }\n        gl.shaderSource(fragmentShader, fragmentShaderSource);\n        gl.compileShader(fragmentShader);\n        // Check for compilation errors...\n    \n        // Create program\n        const program = gl.createProgram();\n        if (!program) {\n            console.error('Failed to create shader program');\n            return null;\n        }\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        // Check for linking errors...\n    \n        return program;\n    }\n    \n    /**\n     * Creates a program from 2 sources.\n     *\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n     *        to use.\n     * @param {string[]} shaderSourcess Array of sources for the\n     *        shaders. The first is assumed to be the vertex shader,\n     *        the second the fragment shader.\n     * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n     * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n     * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n     *        on error. If you want something else pass an callback. It's passed an error message.\n     * @return {WebGLProgram} The created program.\n     * @memberOf module:webgl-utils\n     */\n    function createProgramFromSources(\n        gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n      const shaders = [];\n      for (let ii = 0; ii < shaderSources.length; ++ii) {\n        shaders.push(loadShader(\n            gl, shaderSources[ii], gl[defaultShaderType[ii]], opt_errorCallback));\n      }\n      return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\n    }\n  \n    /**\n     * Returns the corresponding bind point for a given sampler type\n     */\n    function getBindPointForSamplerType(gl, type) {\n      if (type === gl.SAMPLER_2D)   return gl.TEXTURE_2D;        // eslint-disable-line\n      if (type === gl.SAMPLER_CUBE) return gl.TEXTURE_CUBE_MAP;  // eslint-disable-line\n      return undefined;\n    }\n  \n    /**\n     * @typedef {Object.<string, function>} Setters\n     */\n  \n    /**\n     * Creates setter functions for all uniforms of a shader\n     * program.\n     *\n     * @see {@link module:webgl-utils.setUniforms}\n     *\n     * @param {WebGLProgram} program the program to create setters for.\n     * @returns {Object.<string, function>} an object with a setter by name for each uniform\n     * @memberOf module:webgl-utils\n     */\n    function createUniformSetters(gl, program) {\n      let textureUnit = 0;\n  \n      /**\n       * Creates a setter for a uniform of the given program with it's\n       * location embedded in the setter.\n       * @param {WebGLProgram} program\n       * @param {WebGLUniformInfo} uniformInfo\n       * @returns {function} the created setter.\n       */\n      function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const type = uniformInfo.type;\n        // Check if this uniform is an array\n        const isArray = (uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]');\n        if (type === gl.FLOAT && isArray) {\n          return function(v) {\n            gl.uniform1fv(location, v);\n          };\n        }\n        if (type === gl.FLOAT) {\n          return function(v) {\n            gl.uniform1f(location, v);\n          };\n        }\n        if (type === gl.FLOAT_VEC2) {\n          return function(v) {\n            gl.uniform2fv(location, v);\n          };\n        }\n        if (type === gl.FLOAT_VEC3) {\n          return function(v) {\n            gl.uniform3fv(location, v);\n          };\n        }\n        if (type === gl.FLOAT_VEC4) {\n          return function(v) {\n            gl.uniform4fv(location, v);\n          };\n        }\n        if (type === gl.INT && isArray) {\n          return function(v) {\n            gl.uniform1iv(location, v);\n          };\n        }\n        if (type === gl.INT) {\n          return function(v) {\n            gl.uniform1i(location, v);\n          };\n        }\n        if (type === gl.INT_VEC2) {\n          return function(v) {\n            gl.uniform2iv(location, v);\n          };\n        }\n        if (type === gl.INT_VEC3) {\n          return function(v) {\n            gl.uniform3iv(location, v);\n          };\n        }\n        if (type === gl.INT_VEC4) {\n          return function(v) {\n            gl.uniform4iv(location, v);\n          };\n        }\n        if (type === gl.BOOL) {\n          return function(v) {\n            gl.uniform1iv(location, v);\n          };\n        }\n        if (type === gl.BOOL_VEC2) {\n          return function(v) {\n            gl.uniform2iv(location, v);\n          };\n        }\n        if (type === gl.BOOL_VEC3) {\n          return function(v) {\n            gl.uniform3iv(location, v);\n          };\n        }\n        if (type === gl.BOOL_VEC4) {\n          return function(v) {\n            gl.uniform4iv(location, v);\n          };\n        }\n        if (type === gl.FLOAT_MAT2) {\n          return function(v) {\n            gl.uniformMatrix2fv(location, false, v);\n          };\n        }\n        if (type === gl.FLOAT_MAT3) {\n          return function(v) {\n            gl.uniformMatrix3fv(location, false, v);\n          };\n        }\n        if (type === gl.FLOAT_MAT4) {\n          return function(v) {\n            gl.uniformMatrix4fv(location, false, v);\n          };\n        }\n        if ((type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) && isArray) {\n          const units = [];\n          for (let ii = 0; ii < info.size; ++ii) {\n            units.push(textureUnit++);\n          }\n          return function(bindPoint, units) {\n            return function(textures) {\n              gl.uniform1iv(location, units);\n              textures.forEach(function(texture, index) {\n                gl.activeTexture(gl.TEXTURE0 + units[index]);\n                gl.bindTexture(bindPoint, texture);\n              });\n            };\n          }(getBindPointForSamplerType(gl, type), units);\n        }\n        if (type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) {\n          return function(bindPoint, unit) {\n            return function(texture) {\n              gl.uniform1i(location, unit);\n              gl.activeTexture(gl.TEXTURE0 + unit);\n              gl.bindTexture(bindPoint, texture);\n            };\n          }(getBindPointForSamplerType(gl, type), textureUnit++);\n        }\n        throw ('unknown type: 0x' + type.toString(16)); // we should never get here.\n      }\n  \n      const uniformSetters = { };\n      const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  \n      for (let ii = 0; ii < numUniforms; ++ii) {\n        const uniformInfo = gl.getActiveUniform(program, ii);\n        if (!uniformInfo) {\n          break;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n          name = name.substr(0, name.length - 3);\n        }\n        const setter = createUniformSetter(program, uniformInfo);\n        uniformSetters[name] = setter;\n      }\n      return uniformSetters;\n    }\n  \n    /**\n     * Set uniforms and binds related textures.\n     *\n     * Example:\n     *\n     *     let programInfo = createProgramInfo(\n     *         gl, [\"some-vs\", \"some-fs\"]);\n     *\n     *     let tex1 = gl.createTexture();\n     *     let tex2 = gl.createTexture();\n     *\n     *     ... assume we setup the textures with data ...\n     *\n     *     let uniforms = {\n     *       u_someSampler: tex1,\n     *       u_someOtherSampler: tex2,\n     *       u_someColor: [1,0,0,1],\n     *       u_somePosition: [0,1,1],\n     *       u_someMatrix: [\n     *         1,0,0,0,\n     *         0,1,0,0,\n     *         0,0,1,0,\n     *         0,0,0,0,\n     *       ],\n     *     };\n     *\n     *     gl.useProgram(program);\n     *\n     * This will automatically bind the textures AND set the\n     * uniforms.\n     *\n     *     setUniforms(programInfo.uniformSetters, uniforms);\n     *\n     * For the example above it is equivalent to\n     *\n     *     let texUnit = 0;\n     *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n     *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n     *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n     *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n     *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n     *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n     *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n     *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n     *     gl.uniformMatrix4fv(u_someMatrix, false, [\n     *         1,0,0,0,\n     *         0,1,0,0,\n     *         0,0,1,0,\n     *         0,0,0,0,\n     *       ]);\n     *\n     * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n     *\n     *     let uniforms = {\n     *       u_someSampler: tex1,\n     *       u_someOtherSampler: tex2,\n     *     };\n     *\n     *     let moreUniforms {\n     *       u_someColor: [1,0,0,1],\n     *       u_somePosition: [0,1,1],\n     *       u_someMatrix: [\n     *         1,0,0,0,\n     *         0,1,0,0,\n     *         0,0,1,0,\n     *         0,0,0,0,\n     *       ],\n     *     };\n     *\n     *     setUniforms(programInfo.uniformSetters, uniforms);\n     *     setUniforms(programInfo.uniformSetters, moreUniforms);\n     *\n     * @param {Object.<string, function>|module:webgl-utils.ProgramInfo} setters the setters returned from\n     *        `createUniformSetters` or a ProgramInfo from {@link module:webgl-utils.createProgramInfo}.\n     * @param {Object.<string, value>} an object with values for the\n     *        uniforms.\n     * @memberOf module:webgl-utils\n     */\n    function setUniforms(setters, ...values) {\n      setters = setters.uniformSetters || setters;\n      for (const uniforms of values) {\n        Object.keys(uniforms).forEach(function(name) {\n          const setter = setters[name];\n          if (setter) {\n            setter(uniforms[name]);\n          }\n        });\n      }\n    }\n  \n    /**\n     * Creates setter functions for all attributes of a shader\n     * program. You can pass this to {@link module:webgl-utils.setBuffersAndAttributes} to set all your buffers and attributes.\n     *\n     * @see {@link module:webgl-utils.setAttributes} for example\n     * @param {WebGLProgram} program the program to create setters for.\n     * @return {Object.<string, function>} an object with a setter for each attribute by name.\n     * @memberOf module:webgl-utils\n     */\n    function createAttributeSetters(gl, program) {\n      const attribSetters = {\n      };\n  \n      function createAttribSetter(index) {\n        return function(b) {\n            if (b.value) {\n              gl.disableVertexAttribArray(index);\n              switch (b.value.length) {\n                case 4:\n                  gl.vertexAttrib4fv(index, b.value);\n                  break;\n                case 3:\n                  gl.vertexAttrib3fv(index, b.value);\n                  break;\n                case 2:\n                  gl.vertexAttrib2fv(index, b.value);\n                  break;\n                case 1:\n                  gl.vertexAttrib1fv(index, b.value);\n                  break;\n                default:\n                  throw new Error('the length of a float constant value must be between 1 and 4!');\n              }\n            } else {\n              gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n              gl.enableVertexAttribArray(index);\n              gl.vertexAttribPointer(\n                  index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n            }\n          };\n      }\n  \n      const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n      for (let ii = 0; ii < numAttribs; ++ii) {\n        const attribInfo = gl.getActiveAttrib(program, ii);\n        if (!attribInfo) {\n          break;\n        }\n        const index = gl.getAttribLocation(program, attribInfo.name);\n        attribSetters[attribInfo.name] = createAttribSetter(index);\n      }\n  \n      return attribSetters;\n    }\n  \n    /**\n     * Sets attributes and binds buffers (deprecated... use {@link module:webgl-utils.setBuffersAndAttributes})\n     *\n     * Example:\n     *\n     *     let program = createProgramFromScripts(\n     *         gl, [\"some-vs\", \"some-fs\"]);\n     *\n     *     let attribSetters = createAttributeSetters(program);\n     *\n     *     let positionBuffer = gl.createBuffer();\n     *     let texcoordBuffer = gl.createBuffer();\n     *\n     *     let attribs = {\n     *       a_position: {buffer: positionBuffer, numComponents: 3},\n     *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n     *     };\n     *\n     *     gl.useProgram(program);\n     *\n     * This will automatically bind the buffers AND set the\n     * attributes.\n     *\n     *     setAttributes(attribSetters, attribs);\n     *\n     * Properties of attribs. For each attrib you can add\n     * properties:\n     *\n     * *   type: the type of data in the buffer. Default = gl.FLOAT\n     * *   normalize: whether or not to normalize the data. Default = false\n     * *   stride: the stride. Default = 0\n     * *   offset: offset into the buffer. Default = 0\n     *\n     * For example if you had 3 value float positions, 2 value\n     * float texcoord and 4 value uint8 colors you'd setup your\n     * attribs like this\n     *\n     *     let attribs = {\n     *       a_position: {buffer: positionBuffer, numComponents: 3},\n     *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n     *       a_color: {\n     *         buffer: colorBuffer,\n     *         numComponents: 4,\n     *         type: gl.UNSIGNED_BYTE,\n     *         normalize: true,\n     *       },\n     *     };\n     *\n     * @param {Object.<string, function>|model:webgl-utils.ProgramInfo} setters Attribute setters as returned from createAttributeSetters or a ProgramInfo as returned {@link module:webgl-utils.createProgramInfo}\n     * @param {Object.<string, module:webgl-utils.AttribInfo>} attribs AttribInfos mapped by attribute name.\n     * @memberOf module:webgl-utils\n     * @deprecated use {@link module:webgl-utils.setBuffersAndAttributes}\n     */\n    function setAttributes(setters, attribs) {\n      setters = setters.attribSetters || setters;\n      Object.keys(attribs).forEach(function(name) {\n        const setter = setters[name];\n        if (setter) {\n          setter(attribs[name]);\n        }\n      });\n    }\n  \n    /**\n     * Creates a vertex array object and then sets the attributes\n     * on it\n     *\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n     *        to use.\n     * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n     * @param {Object.<string, module:webgl-utils.AttribInfo>} attribs AttribInfos mapped by attribute name.\n     * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n     */\n    function createVAOAndSetAttributes(gl, setters, attribs, indices) {\n      const vao = gl.createVertexArray();\n      gl.bindVertexArray(vao);\n      setAttributes(setters, attribs);\n      if (indices) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n      }\n      // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n      // like when creating buffers for other stuff will mess up this VAO's binding\n      gl.bindVertexArray(null);\n      return vao;\n    }\n  \n    /**\n     * Creates a vertex array object and then sets the attributes\n     * on it\n     *\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n     *        to use.\n     * @param {Object.<string, function>| module:webgl-utils.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n     * @param {module:webgl-utils:BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n     * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n     */\n    function createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n      return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n    }\n  \n    /**\n     * @typedef {Object} ProgramInfo\n     * @property {WebGLProgram} program A shader program\n     * @property {Object<string, function>} uniformSetters: object of setters as returned from createUniformSetters,\n     * @property {Object<string, function>} attribSetters: object of setters as returned from createAttribSetters,\n     * @memberOf module:webgl-utils\n     */\n  \n    /**\n     * Creates a ProgramInfo from 2 sources.\n     *\n     * A ProgramInfo contains\n     *\n     *     programInfo = {\n     *        program: WebGLProgram,\n     *        uniformSetters: object of setters as returned from createUniformSetters,\n     *        attribSetters: object of setters as returned from createAttribSetters,\n     *     }\n     *\n     * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n     *        to use.\n     * @param {string[]} shaderSourcess Array of sources for the\n     *        shaders or ids. The first is assumed to be the vertex shader,\n     *        the second the fragment shader.\n     * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n     * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n     * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n     *        on error. If you want something else pass an callback. It's passed an error message.\n     * @return {module:webgl-utils.ProgramInfo} The created program.\n     * @memberOf module:webgl-utils\n     */\n    function createProgramInfo(\n        gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n      shaderSources = shaderSources.map(function(source) {\n        const script = document.getElementById(source);\n        return script ? script.text : source;\n      });\n      const program = webglUtils.createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback);\n      if (!program) {\n        return null;\n      }\n      const uniformSetters = createUniformSetters(gl, program);\n      const attribSetters = createAttributeSetters(gl, program);\n      return {\n        program: program,\n        uniformSetters: uniformSetters,\n        attribSetters: attribSetters,\n      };\n    }\n  \n    /**\n     * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n     *\n     * Example:\n     *\n     *     let programInfo = createProgramInfo(\n     *         gl, [\"some-vs\", \"some-fs\"]);\n     *\n     *     let arrays = {\n     *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n     *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n     *     };\n     *\n     *     let bufferInfo = createBufferInfoFromArrays(gl, arrays);\n     *\n     *     gl.useProgram(programInfo.program);\n     *\n     * This will automatically bind the buffers AND set the\n     * attributes.\n     *\n     *     setBuffersAndAttributes(programInfo.attribSetters, bufferInfo);\n     *\n     * For the example above it is equivilent to\n     *\n     *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n     *     gl.enableVertexAttribArray(a_positionLocation);\n     *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n     *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n     *     gl.enableVertexAttribArray(a_texcoordLocation);\n     *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n     *\n     * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n     * @param {Object.<string, function>} setters Attribute setters as returned from `createAttributeSetters`\n     * @param {module:webgl-utils.BufferInfo} buffers a BufferInfo as returned from `createBufferInfoFromArrays`.\n     * @memberOf module:webgl-utils\n     */\n    function setBuffersAndAttributes(gl, setters, buffers) {\n      setAttributes(setters, buffers.attribs);\n      if (buffers.indices) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n      }\n    }\n  \n    // Add your prefix here.\n    const browserPrefixes = [\n      '',\n      'MOZ_',\n      'OP_',\n      'WEBKIT_',\n    ];\n  \n    /**\n     * Given an extension name like WEBGL_compressed_texture_s3tc\n     * returns the supported version extension, like\n     * WEBKIT_WEBGL_compressed_teture_s3tc\n     * @param {string} name Name of extension to look for\n     * @return {WebGLExtension} The extension or undefined if not\n     *     found.\n     * @memberOf module:webgl-utils\n     */\n    function getExtensionWithKnownPrefixes(gl, name) {\n      for (let ii = 0; ii < browserPrefixes.length; ++ii) {\n        const prefixedName = browserPrefixes[ii] + name;\n        const ext = gl.getExtension(prefixedName);\n        if (ext) {\n          return ext;\n        }\n      }\n      return undefined;\n    }\n  \n    /**\n     * Resize a canvas to match the size its displayed.\n     * @param {HTMLCanvasElement} canvas The canvas to resize.\n     * @param {number} [multiplier] amount to multiply by.\n     *    Pass in window.devicePixelRatio for native pixels.\n     * @return {boolean} true if the canvas was resized.\n     * @memberOf module:webgl-utils\n     */\n    function resizeCanvasToDisplaySize(canvas, multiplier) {\n      multiplier = multiplier || 1;\n      const width  = canvas.clientWidth  * multiplier | 0;\n      const height = canvas.clientHeight * multiplier | 0;\n      if (canvas.width !== width ||  canvas.height !== height) {\n        canvas.width  = width;\n        canvas.height = height;\n        return true;\n      }\n      return false;\n    }\n  \n    // Add `push` to a typed array. It just keeps a 'cursor'\n    // and allows use to `push` values into the array so we\n    // don't have to manually compute offsets\n    function augmentTypedArray(typedArray, numComponents) {\n      let cursor = 0;\n      typedArray.push = function() {\n        for (let ii = 0; ii < arguments.length; ++ii) {\n          const value = arguments[ii];\n          if (value instanceof Array || (value.buffer && value.buffer instanceof ArrayBuffer)) {\n            for (let jj = 0; jj < value.length; ++jj) {\n              typedArray[cursor++] = value[jj];\n            }\n          } else {\n            typedArray[cursor++] = value;\n          }\n        }\n      };\n      typedArray.reset = function(opt_index) {\n        cursor = opt_index || 0;\n      };\n      typedArray.numComponents = numComponents;\n      Object.defineProperty(typedArray, 'numElements', {\n        get: function() {\n          return this.length / this.numComponents | 0;\n        },\n      });\n      return typedArray;\n    }\n  \n    /**\n     * creates a typed array with a `push` function attached\n     * so that you can easily *push* values.\n     *\n     * `push` can take multiple arguments. If an argument is an array each element\n     * of the array will be added to the typed array.\n     *\n     * Example:\n     *\n     *     let array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n     *     array.push(1, 2, 3);\n     *     array.push([4, 5, 6]);\n     *     // array now contains [1, 2, 3, 4, 5, 6]\n     *\n     * Also has `numComponents` and `numElements` properties.\n     *\n     * @param {number} numComponents number of components\n     * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n     * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n     * @return {ArrayBuffer} A typed array.\n     * @memberOf module:webgl-utils\n     */\n    function createAugmentedTypedArray(numComponents, numElements, opt_type) {\n      const Type = opt_type || Float32Array;\n      return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n    }\n  \n    function createBufferFromTypedArray(gl, array, type, drawType) {\n      type = type || gl.ARRAY_BUFFER;\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(type, buffer);\n      gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n      return buffer;\n    }\n  \n    function allButIndices(name) {\n      return name !== 'indices';\n    }\n  \n    function createMapping(obj) {\n      const mapping = {};\n      Object.keys(obj).filter(allButIndices).forEach(function(key) {\n        mapping['a_' + key] = key;\n      });\n      return mapping;\n    }\n  \n    function getGLTypeForTypedArray(gl, typedArray) {\n      if (typedArray instanceof Int8Array)    { return gl.BYTE; }            // eslint-disable-line\n      if (typedArray instanceof Uint8Array)   { return gl.UNSIGNED_BYTE; }   // eslint-disable-line\n      if (typedArray instanceof Int16Array)   { return gl.SHORT; }           // eslint-disable-line\n      if (typedArray instanceof Uint16Array)  { return gl.UNSIGNED_SHORT; }  // eslint-disable-line\n      if (typedArray instanceof Int32Array)   { return gl.INT; }             // eslint-disable-line\n      if (typedArray instanceof Uint32Array)  { return gl.UNSIGNED_INT; }    // eslint-disable-line\n      if (typedArray instanceof Float32Array) { return gl.FLOAT; }           // eslint-disable-line\n      throw 'unsupported typed array type';\n    }\n  \n    // This is really just a guess. Though I can't really imagine using\n    // anything else? Maybe for some compression?\n    function getNormalizationForTypedArray(typedArray) {\n      if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n      if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n      return false;\n    }\n  \n    function isArrayBuffer(a) {\n      return a.buffer && a.buffer instanceof ArrayBuffer;\n    }\n  \n    function guessNumComponentsFromName(name, length) {\n      let numComponents;\n      if (name.indexOf('coord') >= 0) {\n        numComponents = 2;\n      } else if (name.indexOf('color') >= 0) {\n        numComponents = 4;\n      } else {\n        numComponents = 3;  // position, normals, indices ...\n      }\n  \n      if (length % numComponents > 0) {\n        throw 'can not guess numComponents. You should specify it.';\n      }\n  \n      return numComponents;\n    }\n  \n    function makeTypedArray(array, name) {\n      if (isArrayBuffer(array)) {\n        return array;\n      }\n  \n      if (array.data && isArrayBuffer(array.data)) {\n        return array.data;\n      }\n  \n      if (Array.isArray(array)) {\n        array = {\n          data: array,\n        };\n      }\n  \n      if (!array.numComponents) {\n        array.numComponents = guessNumComponentsFromName(name, array.length);\n      }\n  \n      let type = array.type;\n      if (!type) {\n        if (name === 'indices') {\n          type = Uint16Array;\n        }\n      }\n      const typedArray = createAugmentedTypedArray(array.numComponents, array.data.length / array.numComponents | 0, type);\n      typedArray.push(array.data);\n      return typedArray;\n    }\n  \n    /**\n     * @typedef {Object} AttribInfo\n     * @property {number} [numComponents] the number of components for this attribute.\n     * @property {number} [size] the number of components for this attribute.\n     * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n     * @property {boolean} [normalized] whether or not to normalize the data. Default = false\n     * @property {number} [offset] offset into buffer in bytes. Default = 0\n     * @property {number} [stride] the stride in bytes per element. Default = 0\n     * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n     * @memberOf module:webgl-utils\n     */\n  \n  \n    /**\n     * Creates a set of attribute data and WebGLBuffers from set of arrays\n     *\n     * Given\n     *\n     *      let arrays = {\n     *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n     *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n     *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n     *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n     *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n     *      };\n     *\n     * returns something like\n     *\n     *      let attribs = {\n     *        a_position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n     *        a_texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n     *        a_normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n     *        a_color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n     *      };\n     *\n     * @param {WebGLRenderingContext} gl The webgl rendering context.\n     * @param {Object.<string, array|typedarray>} arrays The arrays\n     * @param {Object.<string, string>} [opt_mapping] mapping from attribute name to array name.\n     *     if not specified defaults to \"a_name\" -> \"name\".\n     * @return {Object.<string, module:webgl-utils.AttribInfo>} the attribs\n     * @memberOf module:webgl-utils\n     */\n    function createAttribsFromArrays(gl, arrays, opt_mapping) {\n      const mapping = opt_mapping || createMapping(arrays);\n      const attribs = {};\n      Object.keys(mapping).forEach(function(attribName) {\n        const bufferName = mapping[attribName];\n        const origArray = arrays[bufferName];\n        if (origArray.value) {\n          attribs[attribName] = {\n            value: origArray.value,\n          };\n        } else {\n          const array = makeTypedArray(origArray, bufferName);\n          attribs[attribName] = {\n            buffer:        createBufferFromTypedArray(gl, array),\n            numComponents: origArray.numComponents || array.numComponents || guessNumComponentsFromName(bufferName),\n            type:          getGLTypeForTypedArray(gl, array),\n            normalize:     getNormalizationForTypedArray(array),\n          };\n        }\n      });\n      return attribs;\n    }\n  \n    function getArray(array) {\n      return array.length ? array : array.data;\n    }\n  \n    const texcoordRE = /coord|texture/i;\n    const colorRE = /color|colour/i;\n  \n    function guessNumComponentsFromName(name, length) {\n      let numComponents;\n      if (texcoordRE.test(name)) {\n        numComponents = 2;\n      } else if (colorRE.test(name)) {\n        numComponents = 4;\n      } else {\n        numComponents = 3;  // position, normals, indices ...\n      }\n  \n      if (length % numComponents > 0) {\n        throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n      }\n  \n      return numComponents;\n    }\n  \n    function getNumComponents(array, arrayName) {\n      return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n    }\n  \n    /**\n     * tries to get the number of elements from a set of arrays.\n     */\n    const positionKeys = ['position', 'positions', 'a_position'];\n    function getNumElementsFromNonIndexedArrays(arrays) {\n      let key;\n      for (const k of positionKeys) {\n        if (k in arrays) {\n          key = k;\n          break;\n        }\n      }\n      key = key || Object.keys(arrays)[0];\n      const array = arrays[key];\n      const length = getArray(array).length;\n      const numComponents = getNumComponents(array, key);\n      const numElements = length / numComponents;\n      if (length % numComponents > 0) {\n        throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n      }\n      return numElements;\n    }\n  \n    /**\n     * @typedef {Object} BufferInfo\n     * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n     * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n     * @property {Object.<string, module:webgl-utils.AttribInfo>} attribs The attribs approriate to call `setAttributes`\n     * @memberOf module:webgl-utils\n     */\n  \n  \n    /**\n     * Creates a BufferInfo from an object of arrays.\n     *\n     * This can be passed to {@link module:webgl-utils.setBuffersAndAttributes} and to\n     * {@link module:webgl-utils:drawBufferInfo}.\n     *\n     * Given an object like\n     *\n     *     let arrays = {\n     *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n     *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n     *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n     *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n     *     };\n     *\n     *  Creates an BufferInfo like this\n     *\n     *     bufferInfo = {\n     *       numElements: 4,        // or whatever the number of elements is\n     *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n     *       attribs: {\n     *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n     *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n     *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n     *       },\n     *     };\n     *\n     *  The properties of arrays can be JavaScript arrays in which case the number of components\n     *  will be guessed.\n     *\n     *     let arrays = {\n     *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n     *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n     *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n     *        indices:  [0, 1, 2, 1, 2, 3],\n     *     };\n     *\n     *  They can also by TypedArrays\n     *\n     *     let arrays = {\n     *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n     *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n     *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n     *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n     *     };\n     *\n     *  Or augmentedTypedArrays\n     *\n     *     let positions = createAugmentedTypedArray(3, 4);\n     *     let texcoords = createAugmentedTypedArray(2, 4);\n     *     let normals   = createAugmentedTypedArray(3, 4);\n     *     let indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n     *\n     *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n     *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n     *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n     *     indices.push([0, 1, 2, 1, 2, 3]);\n     *\n     *     let arrays = {\n     *        position: positions,\n     *        texcoord: texcoords,\n     *        normal:   normals,\n     *        indices:  indices,\n     *     };\n     *\n     * For the last example it is equivalent to\n     *\n     *     let bufferInfo = {\n     *       attribs: {\n     *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n     *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n     *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n     *       },\n     *       indices: gl.createBuffer(),\n     *       numElements: 6,\n     *     };\n     *\n     *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n     *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n     *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n     *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n     *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n     *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n     *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n     *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n     *\n     * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n     * @param {Object.<string, array|object|typedarray>} arrays Your data\n     * @param {Object.<string, string>} [opt_mapping] an optional mapping of attribute to array name.\n     *    If not passed in it's assumed the array names will be mapped to an attribute\n     *    of the same name with \"a_\" prefixed to it. An other words.\n     *\n     *        let arrays = {\n     *           position: ...,\n     *           texcoord: ...,\n     *           normal:   ...,\n     *           indices:  ...,\n     *        };\n     *\n     *        bufferInfo = createBufferInfoFromArrays(gl, arrays);\n     *\n     *    Is the same as\n     *\n     *        let arrays = {\n     *           position: ...,\n     *           texcoord: ...,\n     *           normal:   ...,\n     *           indices:  ...,\n     *        };\n     *\n     *        let mapping = {\n     *          a_position: \"position\",\n     *          a_texcoord: \"texcoord\",\n     *          a_normal:   \"normal\",\n     *        };\n     *\n     *        bufferInfo = createBufferInfoFromArrays(gl, arrays, mapping);\n     *\n     * @return {module:webgl-utils.BufferInfo} A BufferInfo\n     * @memberOf module:webgl-utils\n     */\n    function createBufferInfoFromArrays(gl, arrays, opt_mapping) {\n      const bufferInfo = {\n        attribs: createAttribsFromArrays(gl, arrays, opt_mapping),\n      };\n      let indices = arrays.indices;\n      if (indices) {\n        indices = makeTypedArray(indices, 'indices');\n        bufferInfo.indices = createBufferFromTypedArray(gl, indices, gl.ELEMENT_ARRAY_BUFFER);\n        bufferInfo.numElements = indices.length;\n      } else {\n        bufferInfo.numElements = getNumElementsFromNonIndexedArrays(arrays);\n      }\n  \n      return bufferInfo;\n    }\n  \n    /**\n     * Creates buffers from typed arrays\n     *\n     * Given something like this\n     *\n     *     let arrays = {\n     *        positions: [1, 2, 3],\n     *        normals: [0, 0, 1],\n     *     }\n     *\n     * returns something like\n     *\n     *     buffers = {\n     *       positions: WebGLBuffer,\n     *       normals: WebGLBuffer,\n     *     }\n     *\n     * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n     *\n     * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n     * @param {Object<string, array|typedarray>} arrays\n     * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n     * @memberOf module:webgl-utils\n     */\n    function createBuffersFromArrays(gl, arrays) {\n      const buffers = { };\n      Object.keys(arrays).forEach(function(key) {\n        const type = key === 'indices' ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n        const array = makeTypedArray(arrays[key], name);\n        buffers[key] = createBufferFromTypedArray(gl, array, type);\n      });\n  \n      // hrm\n      if (arrays.indices) {\n        buffers.numElements = arrays.indices.length;\n      } else if (arrays.position) {\n        buffers.numElements = arrays.position.length / 3;\n      }\n  \n      return buffers;\n    }\n  \n    /**\n     * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n     *\n     * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n     * but calling this means if you switch from indexed data to non-indexed\n     * data you don't have to remember to update your draw call.\n     *\n     * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n     * @param {module:webgl-utils.BufferInfo} bufferInfo as returned from createBufferInfoFromArrays\n     * @param {enum} [primitiveType] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...)\n     * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n     * @param {number} [offset] An optional offset. Defaults to 0.\n     * @memberOf module:webgl-utils\n     */\n    function drawBufferInfo(gl, bufferInfo, primitiveType, count, offset) {\n      const indices = bufferInfo.indices;\n      primitiveType = primitiveType === undefined ? gl.TRIANGLES : primitiveType;\n      const numElements = count === undefined ? bufferInfo.numElements : count;\n      offset = offset === undefined ? 0 : offset;\n      if (indices) {\n        gl.drawElements(primitiveType, numElements, gl.UNSIGNED_SHORT, offset);\n      } else {\n        gl.drawArrays(primitiveType, offset, numElements);\n      }\n    }\n  \n    /**\n     * @typedef {Object} DrawObject\n     * @property {module:webgl-utils.ProgramInfo} programInfo A ProgramInfo as returned from createProgramInfo\n     * @property {module:webgl-utils.BufferInfo} bufferInfo A BufferInfo as returned from createBufferInfoFromArrays\n     * @property {Object<string, ?>} uniforms The values for the uniforms\n     * @memberOf module:webgl-utils\n     */\n  \n    /**\n     * Draws a list of objects\n     * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n     * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n     * @memberOf module:webgl-utils\n     */\n    function drawObjectList(gl, objectsToDraw) {\n      let lastUsedProgramInfo = null;\n      let lastUsedBufferInfo = null;\n  \n      objectsToDraw.forEach(function(object) {\n        const programInfo = object.programInfo;\n        const bufferInfo = object.bufferInfo;\n        let bindBuffers = false;\n  \n        if (programInfo !== lastUsedProgramInfo) {\n          lastUsedProgramInfo = programInfo;\n          gl.useProgram(programInfo.program);\n          bindBuffers = true;\n        }\n  \n        // Setup all the needed attributes.\n        if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n          lastUsedBufferInfo = bufferInfo;\n          setBuffersAndAttributes(gl, programInfo.attribSetters, bufferInfo);\n        }\n  \n        // Set the uniforms.\n        setUniforms(programInfo.uniformSetters, object.uniforms);\n  \n        // Draw\n        drawBufferInfo(gl, bufferInfo);\n      });\n    }\n  \n    function glEnumToString(gl, v) {\n      const results = [];\n      for (const key in gl) {\n        if (gl[key] === v) {\n          results.push(key);\n        }\n      }\n      return results.length\n          ? results.join(' | ')\n          : `0x${v.toString(16)}`;\n    }\n  \n    const isIE = /*@cc_on!@*/false || !!document.documentMode;\n    // Edge 20+\n    const isEdge = !isIE && !!window.StyleMedia;\n    if (isEdge) {\n      // Hack for Edge. Edge's WebGL implmentation is crap still and so they\n      // only respond to \"experimental-webgl\". I don't want to clutter the\n      // examples with that so his hack works around it\n      HTMLCanvasElement.prototype.getContext = function(origFn) {\n        return function() {\n          let args = arguments;\n          const type = args[0];\n          if (type === 'webgl') {\n            args = [].slice.call(arguments);\n            args[0] = 'experimental-webgl';\n          }\n          return origFn.apply(this, args);\n        };\n      }(HTMLCanvasElement.prototype.getContext);\n    }\n  \n    return {\n      createAugmentedTypedArray: createAugmentedTypedArray,\n      createAttribsFromArrays: createAttribsFromArrays,\n      createBuffersFromArrays: createBuffersFromArrays,\n      createBufferInfoFromArrays: createBufferInfoFromArrays,\n      createAttributeSetters: createAttributeSetters,\n      createProgram: createProgram,\n      createProgramFromScripts: createProgramFromScripts,\n      createProgramFromSources: createProgramFromSources,\n      createProgramInfo: createProgramInfo,\n      createUniformSetters: createUniformSetters,\n      createVAOAndSetAttributes: createVAOAndSetAttributes,\n      createVAOFromBufferInfo: createVAOFromBufferInfo,\n      drawBufferInfo: drawBufferInfo,\n      drawObjectList: drawObjectList,\n      glEnumToString: glEnumToString,\n      getExtensionWithKnownPrefixes: getExtensionWithKnownPrefixes,\n      resizeCanvasToDisplaySize: resizeCanvasToDisplaySize,\n      setAttributes: setAttributes,\n      setBuffersAndAttributes: setBuffersAndAttributes,\n      setUniforms: setUniforms,\n    };\n  \n  }));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { paint } from \"./lib/shaderBinder\";\n\nexport default paint;"],"names":["webglUtils","require","render","image","canvasEle","shaderCode","arguments","length","undefined","canvas","gl","getContext","vertexShader","vertex","fragmentShader","fragment","program","createProgramFromScripts","positionLocation","getAttribLocation","texcoordLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","setRectangle","width","height","texcoordBuffer","bufferData","Float32Array","STATIC_DRAW","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","resolutionLocation","getUniformLocation","resizeCanvasToDisplaySize","viewport","clearColor","clear","COLOR_BUFFER_BIT","useProgram","enableVertexAttribArray","size","type","FLOAT","normalize","stride","offset","vertexAttribPointer","uniform2f","primitiveType","TRIANGLES","count","drawArrays","x","y","x1","x2","y1","y2","paint","fileName","Image","src","onload","root","factory","define","amd","call","topWindow","isInIFrame","w","top","console","log","error","msg","loadShader","shaderSource","shaderType","opt_errorCallback","errFn","shader","createShader","compileShader","compiled","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","split","map","l","i","concat","join","deleteShader","createProgram","shaders","opt_attribs","opt_locations","forEach","attachShader","attrib","ndx","bindAttribLocation","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShaderFromScript","scriptId","opt_shaderType","shaderScript","document","getElementById","text","VERTEX_SHADER","FRAGMENT_SHADER","defaultShaderType","createProgramFromScripts_original","shaderScriptIds","ii","push","vertexShaderSource","fragmentShaderSource","createProgramFromSources","shaderSources","getBindPointForSamplerType","SAMPLER_2D","SAMPLER_CUBE","TEXTURE_CUBE_MAP","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","location","name","isArray","substr","v","uniform1fv","uniform1f","FLOAT_VEC2","uniform2fv","FLOAT_VEC3","uniform3fv","FLOAT_VEC4","uniform4fv","INT","uniform1iv","uniform1i","INT_VEC2","uniform2iv","INT_VEC3","uniform3iv","INT_VEC4","uniform4iv","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","units","info","bindPoint","textures","index","activeTexture","TEXTURE0","unit","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","setter","setUniforms","setters","_len","values","Array","_key","_loop","uniforms","_values","_i","Object","keys","createAttributeSetters","attribSetters","createAttribSetter","b","value","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","Error","buffer","numComponents","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","setAttributes","attribs","createVAOAndSetAttributes","indices","vao","createVertexArray","bindVertexArray","ELEMENT_ARRAY_BUFFER","createVAOFromBufferInfo","programInfo","bufferInfo","createProgramInfo","source","script","setBuffersAndAttributes","buffers","browserPrefixes","getExtensionWithKnownPrefixes","prefixedName","ext","getExtension","multiplier","clientWidth","clientHeight","augmentTypedArray","typedArray","cursor","ArrayBuffer","jj","reset","opt_index","defineProperty","get","createAugmentedTypedArray","numElements","opt_type","Type","createBufferFromTypedArray","array","drawType","allButIndices","createMapping","obj","mapping","filter","key","getGLTypeForTypedArray","Int8Array","BYTE","Uint8Array","Int16Array","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","Uint32Array","UNSIGNED_INT","getNormalizationForTypedArray","isArrayBuffer","a","guessNumComponentsFromName","indexOf","makeTypedArray","data","createAttribsFromArrays","arrays","opt_mapping","attribName","bufferName","origArray","getArray","texcoordRE","colorRE","test","getNumComponents","arrayName","positionKeys","getNumElementsFromNonIndexedArrays","_iterator","_createForOfIteratorHelper","_step","s","n","done","k","err","e","f","createBufferInfoFromArrays","createBuffersFromArrays","position","drawBufferInfo","drawElements","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","bindBuffers","glEnumToString","results","isIE","documentMode","isEdge","window","StyleMedia","HTMLCanvasElement","prototype","origFn","args","slice","apply"],"sourceRoot":""}